CODE = { SOI ~ FRAGMENT* ~ EOI }

FRAGMENT = {
    MULTILINE_STRING ~ NEWLINE?
    | IMPORT_STATEMENT_LIST ~ NEWLINE?
    | SINGLELINE_IF_TYPECHECKING ~ NEWLINE?
    | IF_TYPECHECKING ~ NEWLINE?
    | _WHITESPACE+
    | ANY_LINE
}

IMPORT_STATEMENT_LIST = { IMPORT_STATEMENT ~ (_WHITESPACE* ~ ";" ~ _WHITESPACE* ~ IMPORT_STATEMENT)* ~ _WHITESPACE* ~ ";"? ~ _WHITESPACE* ~ _COMMENT? }

IMPORT_STATEMENT = _{
    SIMPLE_IMPORT_STATEMENT
    | FROM_IMPORT_STATEMENT
    | MULTILINE_FROM_IMPORT_STATEMENT
    | WILDCARD_FROM_IMPORT_STATEMENT
}

SIMPLE_IMPORT_STATEMENT = { "import" ~ _WHITESPACE+ ~ MODULE ~ (_WHITESPACE+ ~ AS_IDENTIFIER)? ~ (_WHITESPACE* ~ "," ~ _WHITESPACE* ~ MODULE ~ (_WHITESPACE+ ~ AS_IDENTIFIER)?)* }

FROM_IMPORT_STATEMENT = { "from" ~ _WHITESPACE+ ~ RELATIVE_MODULE ~ _WHITESPACE+ ~ "import" ~ _WHITESPACE+ ~ IDENTIFIER ~ (_WHITESPACE+ ~ AS_IDENTIFIER)? ~ _WHITESPACE* ~ (_WHITESPACE* ~ "," ~ _WHITESPACE* ~ IDENTIFIER ~ (_WHITESPACE+ ~ AS_IDENTIFIER)?)* }

WILDCARD_FROM_IMPORT_STATEMENT = { "from" ~ _WHITESPACE+ ~ RELATIVE_MODULE ~ _WHITESPACE+ ~ "import" ~ _WHITESPACE+ ~ "*" }

MULTILINE_FROM_IMPORT_STATEMENT = {
    "from" ~ _WHITESPACE+ ~ RELATIVE_MODULE ~ _WHITESPACE+ ~ "import" ~ _WHITESPACE+ ~ "(" ~
    (_WHITESPACE | _COMMENT | NEWLINE)* ~ IDENTIFIER ~ (_WHITESPACE+ ~ AS_IDENTIFIER)? ~
    ((_WHITESPACE | _COMMENT | NEWLINE)* ~ "," ~ (_WHITESPACE | _COMMENT | NEWLINE)* ~ IDENTIFIER ~ (_WHITESPACE+ ~ AS_IDENTIFIER)?)* ~
    (_WHITESPACE | _COMMENT | NEWLINE)* ~ ","? ~ (_WHITESPACE | _COMMENT | NEWLINE)* ~ ")"
}

MODULE = @{ IDENTIFIER ~ ("." ~ IDENTIFIER)* }
RELATIVE_MODULE = @{ ("."* ~ MODULE) | "."+ }
IDENTIFIER = @{ (ASCII_ALPHANUMERIC | "_")+ }
AS_IDENTIFIER = { "as" ~ _WHITESPACE+ ~ IDENTIFIER }

_WHITESPACE = _{ " " | ("\\" ~ NEWLINE)}
_COMMENT = _{ "#" ~ NOT_NEWLINE* }
NOT_NEWLINE = _{ !NEWLINE ~ ANY }
ANY_LINE = _{ NOT_NEWLINE* ~ NEWLINE }
EMPTY_LINE = _{ _WHITESPACE* ~ NEWLINE }

MULTILINE_STRING = { MULTILINE_STRING_SINGLE | MULTILINE_STRING_DOUBLE }
MULTILINE_STRING_SINGLE = {
    "'''"
    ~ (!"'''" ~ ANY)*
    ~ "'''"
}
MULTILINE_STRING_DOUBLE = {
    "\"\"\""
    ~ (!"\"\"\"" ~ ANY)*
    ~ "\"\"\""
}

SINGLELINE_IF_TYPECHECKING = { "if" ~ _WHITESPACE+ ~ ("typing.TYPE_CHECKING" | "TYPE_CHECKING") ~ _WHITESPACE* ~ ":" ~ _WHITESPACE* ~ IMPORT_STATEMENT_LIST }

IF_TYPECHECKING = ${
    "if" ~ _WHITESPACE+ ~ ("typing.TYPE_CHECKING" | "TYPE_CHECKING") ~ _WHITESPACE* ~ ":" ~ NOT_NEWLINE* ~ NEWLINE ~
    EMPTY_LINE* ~
    PUSH("  "+ | "\t"+) ~ IF_TYPECHECKING_FRAGMENT ~
    (
        EMPTY_LINE
        | PEEK ~ IF_TYPECHECKING_FRAGMENT
    )* ~
    DROP
}
IF_TYPECHECKING_FRAGMENT = {
    MULTILINE_STRING ~ NEWLINE?
    | IMPORT_STATEMENT_LIST ~ NEWLINE?
    | _WHITESPACE+
    | ANY_LINE
}




